name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  merge_group:
    branches: [main]

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up environment
        uses: ./.github/actions/setup

      # formatters
      - name: Run ruff format
        run: uv run ruff format --check .
      - name: Run toml-sort
        run: uv run toml-sort --check $(git ls-files '*.toml')
      - name: Run prettier
        run: yarn run prettier --check $(git ls-files '*.yml' '*.yaml')

      # linters
      - name: Run ruff check
        run: uv run ruff check .

  type-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up environment
        uses: ./.github/actions/setup

      - name: Generate build time key fragments
        uses: ./.github/actions/build-time-key-fragment
        id: keygen
      - name: Restore mypy cache
        if: github.event_name == 'pull_request'
        uses: actions/cache/restore@v4
        with:
          path: .mypy_cache
          key: mypy-cache-${{ steps.keygen.outputs.primary_key }}
          restore-keys: |
            mypy-cache-${{ steps.keygen.outputs.restore_key_1 }}
            mypy-cache-${{ steps.keygen.outputs.restore_key_2 }}
            mypy-cache-${{ steps.keygen.outputs.restore_key_3 }}

      - name: Run mypy
        run: uv run mypy .

  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up environment
        uses: ./.github/actions/setup

      - name: Run Django tests
        run: uv run python manage.py test
